server:
  port: 8087
spring:
  application:
    name: backoffice-bff
  profiles:
    active: dev
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://identity/realms/Yas
        registration:
          api-client:
            provider: keycloak
            client-id: backoffice-bff
            client-secret: TVacLC0cQ8tiiEKiTVerTb2YvwQ1TRJF
            scope: openid, profile, email, roles
management:
  tracing:
    sampling:
      probability: '1.0'
  endpoints:
    web:
      exposure:
        include: prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
---

spring:
  config:
    activate:
      on-profile: "dev"
  cloud:
      gateway:
        routes:
        - id: api
          uri: http://localhost:8080
          #uri: http://api.yas.local
          predicates:
              - Path=/api/**
          filters:
              - RewritePath=/api/(?<segment>.*), /$\{segment}
              - TokenRelay=
        - id: nextjs
          uri: http://localhost:3000
          predicates:
              - Path=/**
---

spring:
  config:
    activate:
      on-profile: "prod"
  cloud:
      gateway:
        routes:
          - id: api
            uri: http://product
            predicates:
                - Path=/api/product/**
            filters:
                - RewritePath=/api/(?<segment>.*), /$\{segment}
                - TokenRelay=
          - id: nextjs
            uri: http://localhost:3000
            predicates:
                - Path=/**
