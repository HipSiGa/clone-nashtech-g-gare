version: "3.8"
services:
  nginx:
    image:  nginx:1.23.3
    restart: unless-stopped
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf
    ports:
      - "80:80"
  identity:
    image: quay.io/keycloak/keycloak:21.0.2
    command: [ 'start-dev --import-realm' ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: passthrough
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_HTTP_PORT: 80
    volumes:
      - ./identity/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./identity/themes:/opt/keycloak/themes
  backoffice:
    image: ghcr.io/nashtech-garage/yas-backoffice-bff:latest
    entrypoint: ["./wait-for-it.sh", "identity:80", "--timeout=180", "--", "java", "-jar", "/backoffice-bff-0.0.1-SNAPSHOT.jar"]
    environment:
      SERVER_PORT: "80"
      SPRING_PROFILES_ACTIVE: prod
      #SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://identity:8080/realms/Yas
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: api
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://nginx
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path= /api/**
      SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[0]: RewritePath=/api/(?<segment>.*), /$$\{segment}
      SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[1]: TokenRelay=
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: nextjs
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://backoffice-nextjs:3000
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path= /**
  backoffice-nextjs:
    image: ghcr.io/nashtech-garage/yas-backoffice:latest
  storefront:
    image: ghcr.io/nashtech-garage/yas-storefront-bff:latest
    entrypoint: ["./wait-for-it.sh", "identity:80", "--timeout=180", "--", "java", "-jar", "/storefront-bff-0.0.1-SNAPSHOT.jar"]
    environment:
      SERVER_PORT: "80"
      SPRING_PROFILES_ACTIVE: prod
      #SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://identity:8080/realms/Yas
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: api
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://nginx
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path= /api/**
      SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[0]: RewritePath=/api/(?<segment>.*), /$$\{segment}
      SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[1]: TokenRelay=
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: nextjs
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://storefront-nextjs:3000
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path= /**
      YAS_SERVICES_CUSTOMER: http://customer/customer
      YAS_SERVICES_CART: http://cart/cart
      YAS_SERVICES_RATING: http://rating/rating
      YAS_SERVICES_ORDER: http://order/order
      YAS_SERVICES_LOCATION: http://location/location
      YAS_SERVICES_INVENTORY: http://inventory/inventory
      YAS_SERVICES_TAX: http://tax/tax
      YAS_SERVICES_PROMOTION: http://promotion/promotion
  storefront-nextjs:
    image: ghcr.io/nashtech-garage/yas-storefront:latest
  media:
    image: ghcr.io/nashtech-garage/yas-media:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/media
      SERVER_SERVLET_CONTEXT_PATH: /media
      YAS_PUBLICURL: http://api.yas.local/media
      SERVER_PORT: "80"
  product:
    image: ghcr.io/nashtech-garage/yas-product:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/product
      SERVER_SERVLET_CONTEXT_PATH: /product
      YAS_SERVICES_MEDIA: http://media/media
      SERVER_PORT: "80"
  customer:
    image: ghcr.io/nashtech-garage/yas-customer:latest
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /customer
      SERVER_PORT: "80"
  cart:
    image: ghcr.io/nashtech-garage/yas-cart:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cart
      SERVER_SERVLET_CONTEXT_PATH: /cart
      YAS_SERVICES_MEDIA: http://media/media
      YAS_SERVICES_PRODUCT: http://product/product
      SERVER_PORT: "80"
  rating:
    image: ghcr.io/nashtech-garage/yas-rating:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/rating
      SERVER_SERVLET_CONTEXT_PATH: /rating
      YAS_PUBLIC_URL: http://api.yas.local/rating
      YAS_SERVICES_PRODUCT: http://product/product
      YAS_SERVICES_CUSTOMER: http://customer/customer
      SERVER_PORT: "80"
  order:
    image: ghcr.io/nashtech-garage/yas-order:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order
      SERVER_SERVLET_CONTEXT_PATH: /order
      YAS_PUBLIC_URL: http://api.yas.local/order
      YAS_SERVICES_PRODUCT: http://product/product
      YAS_SERVICES_CUSTOMER: http://customer/customer
      SERVER_PORT: "80"
  location:
    image: ghcr.io/nashtech-garage/yas-location:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/location
      SERVER_SERVLET_CONTEXT_PATH: /location
      YAS_PUBLICURL: http://api.yas.local/location
      SERVER_PORT: "80"
  inventory:
    image: ghcr.io/nashtech-garage/yas-inventory:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/inventory
      SERVER_SERVLET_CONTEXT_PATH: /inventory
      YAS_PUBLIC_URL: http://api.yas.local/inventory
      YAS_SERVICES_PRODUCT: http://product/product
      SERVER_PORT: "80"
  promotion:
    image: ghcr.io/nashtech-garage/yas-promotion:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/promotion
      SERVER_SERVLET_CONTEXT_PATH: /promotion
      YAS_PUBLIC_URL: http://api.yas.local/promotion
      YAS_SERVICES_PRODUCT: http://product/product
  tax:
    image: ghcr.io/nashtech-garage/yas-tax:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tax
      SERVER_SERVLET_CONTEXT_PATH: /tax
      YAS_PUBLIC_URL: http://api.yas.local/tax
      SERVER_PORT: "80"
  swagger-ui:
    image: swaggerapi/swagger-ui:v4.16.0
    environment:
      BASE_URL: /swagger-ui
      URLS: "[{ url: 'http://api.yas.local/product/v3/api-docs', name: 'Product' },
      { url: 'http://api.yas.local/media/v3/api-docs', name: 'Media' },
      { url: 'http://api.yas.local/customer/v3/api-docs', name: 'Customer' }, 
      { url: 'http://api.yas.local/cart/v3/api-docs', name: 'Cart'},
      { url: 'http://api.yas.local/rating/v3/api-docs', name: 'Rating' }, 
      { url: 'http://api.yas.local/order/v3/api-docs', name: 'Order'},
      { url: 'http://api.yas.local/location/v3/api-docs', name: 'Location'}, 
      { url: 'http://api.yas.local/inventory/v3/api-docs', name: 'Inventory'},
      { url: 'http://api.yas.local/tax/v3/api-docs', name: 'Tax' },
      { url: 'http://api.yas.local/promotion/v3/api-docs', name: 'Promotion'}]"
      OAUTH_CLIENT_ID: swagger-ui
      OAUTH_USE_PKCE: "true"
  postgres:
    image: postgres:14.5
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
  pgadmin:
    image: dpage/pgadmin4:6.20
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@yas.com
      PGADMIN_DEFAULT_PASSWORD: admin
  tempo:
    image: grafana/tempo:main-0c1eb27
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin
      #- "4317:4317" # otlp grpc ingest
      #- "4318:4318" # otlp http ingest
  loki:
    image: grafana/loki:2.7.4
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
  prometheus:
    image: prom/prometheus:v2.42.0
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.3.6
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3009:3000"
      
volumes:
  postgres:
  pgadmin:
